# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-22 00:15
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('dashboard', '0001_initial'), ('dashboard', '0002_auto_20170821_1607'), ('dashboard', '0003_auto_20170821_1612'), ('dashboard', '0004_auto_20170821_1627')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=255)),
                ('senha', models.CharField(max_length=255)),
                ('privilegio', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'administradores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Constantes',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('cp_tusd', models.FloatField(db_column='CP_TUSD')),
                ('cp_hini', models.TimeField(db_column='CP_hini')),
                ('cp_hter', models.TimeField(db_column='CP_hter')),
                ('cfp_tusd', models.FloatField(db_column='CFP_TUSD')),
                ('cfp_hini', models.TimeField(db_column='CFP_hini')),
                ('cfp_hter', models.TimeField(db_column='CFP_hter')),
                ('cp_tev', models.FloatField(db_column='CP_TEV')),
                ('cptv_hini', models.TimeField(db_column='CPTV_hini')),
                ('cptv_hter', models.TimeField(db_column='CPTV_hter')),
                ('cfp_tev', models.FloatField(db_column='CFP_TEV')),
                ('cfptv_hini', models.TimeField(db_column='CFPTV_hini')),
                ('cfptv_hter', models.TimeField(db_column='CFPTV_hter')),
                ('cre_p', models.FloatField(db_column='CRE_P')),
                ('crep_hini', models.TimeField(db_column='CREP_hini')),
                ('crep_hter', models.TimeField(db_column='CREP_hter')),
                ('cre_fp', models.FloatField(db_column='CRE_FP')),
                ('crefp_hini', models.TimeField(db_column='CREFP_hini')),
                ('crefp_hter', models.TimeField(db_column='CREFP_hter')),
                ('demanda', models.FloatField(db_column='DEMANDA')),
                ('ultra', models.FloatField(db_column='ULTRA')),
                ('ultra_p', models.FloatField(db_column='ULTRA_P')),
                ('ultrap_hini', models.TimeField(db_column='ULTRAP_hini')),
                ('ultrap_hter', models.TimeField(db_column='ULTRAP_hter')),
                ('ultra_fp', models.FloatField(db_column='ULTRA_FP')),
                ('ultrafp_hini', models.TimeField(db_column='ULTRAFP_hini')),
                ('ultrafp_hter', models.TimeField(db_column='ULTRAFP_hter')),
                ('tsimp', models.DecimalField(db_column='TSIMP', decimal_places=0, max_digits=10)),
                ('pis', models.DecimalField(db_column='PIS', decimal_places=0, max_digits=10)),
                ('cofins', models.DecimalField(db_column='COFINS', decimal_places=0, max_digits=10)),
                ('icms', models.DecimalField(db_column='ICMS', decimal_places=0, max_digits=10)),
                ('coefangpa', models.FloatField(db_column='CoefAngPA')),
                ('coeflinpa', models.FloatField(db_column='CoefLinPA')),
                ('coefangpr', models.FloatField(db_column='CoefAngPR')),
                ('coeflinpr', models.FloatField(db_column='CoefLinPR')),
            ],
            options={
                'db_table': 'constantes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dado',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('data', models.DateField(db_column='Data')),
                ('hora', models.TimeField(db_column='Hora')),
                ('kw', models.FloatField(db_column='Kw')),
                ('kva', models.FloatField(db_column='Kva')),
            ],
            options={
                'db_table': 'dados_',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dado250Min',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('data', models.DateField(db_column='Data')),
                ('hora', models.TimeField(db_column='Hora')),
                ('segundos', models.FloatField(db_column='Segundos')),
                ('kw', models.FloatField(db_column='Kw')),
            ],
            options={
                'db_table': 'dados_250ms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dado5Min',
            fields=[
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('hora', models.TimeField(blank=True, db_column='Hora', null=True)),
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('kw', models.FloatField(blank=True, db_column='Kw', null=True)),
                ('kwh', models.FloatField(blank=True, db_column='Kwh', null=True)),
                ('segundos', models.FloatField(blank=True, db_column='Segundos', null=True)),
            ],
            options={
                'db_table': 'dados_5min',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DadoGrafico',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('data', models.DateField(db_column='Data')),
                ('hora', models.TimeField(db_column='Hora')),
                ('potenciaativa', models.FloatField(db_column='PotenciaAtiva')),
                ('potenciareativa', models.FloatField(db_column='PotenciaReativa')),
                ('comentario', models.CharField(blank=True, db_column='Comentario', max_length=255, null=True)),
            ],
            options={
                'db_table': 'dados-graficos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Val15Seg',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('data', models.DateField(db_column='Data')),
                ('hora', models.TimeField(db_column='Hora')),
                ('kw', models.FloatField(db_column='Kw')),
            ],
            options={
                'db_table': 'val_15s',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Val5Min',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('data', models.DateField(db_column='Data')),
                ('hora', models.TimeField(db_column='Hora')),
                ('kwh', models.FloatField(db_column='Kwh')),
            ],
        ),
    ]
